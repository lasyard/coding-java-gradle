plugins {
    id 'java'
    id 'checkstyle'
}

checkstyle {
    ignoreFailures = false
    maxWarnings = 0
    project.ext.checkstyleVersion = 'checkstyle'.v()
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    // `it` is a keyword of Groovy.
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    // facilities
    annotationProcessor 'org.projectlombok:lombok:' + 'lombok'.v()
    compileOnly 'org.projectlombok:lombok:' + 'lombok'.v()
    testAnnotationProcessor 'org.projectlombok:lombok:' + 'lombok'.v()
    testCompileOnly 'org.projectlombok:lombok:' + 'lombok'.v()
    // testing
    testImplementation 'org.assertj:assertj-core:' + 'assertj'.v()
    testImplementation 'org.junit.jupiter:junit-jupiter-api:' + 'junit5'.v()
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + 'junit5'.v()
    // integration testing
    intTestImplementation 'org.assertj:assertj-core:' + 'assertj'.v()
    intTestImplementation 'org.junit.jupiter:junit-jupiter-api:' + 'junit5'.v()
    intTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + 'junit5'.v()
    // logging
    implementation 'org.slf4j:slf4j-api:' + 'slf4j'.v()
    runtimeOnly 'ch.qos.logback:logback-classic:' + 'logback'.v()
    runtimeOnly 'ch.qos.logback:logback-core:' + 'logback'.v()
    // static check
    compileOnly 'com.google.code.findbugs:jsr305:' + 'jsr305'.v()
}

test {
    useJUnitPlatform()
}

task intTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    useJUnitPlatform()
    shouldRunAfter test
}
